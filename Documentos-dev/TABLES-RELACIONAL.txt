-- PostgreSQL 17 Script para Criação do Banco de Dados

-- Create Pessoa table - correto
CREATE TABLE Pessoa (
    Pess_ID INTEGER PRIMARY KEY,
    Pess_Nome VARCHAR(4000) NOT NULL,
    Pess_CPF VARCHAR(4000) NOT NULL,
    Pess_Telefone VARCHAR(4000) NOT NULL,
    Pess_Email VARCHAR(4000) NOT NULL
);

-- Create Categoria table - correto
CREATE TABLE Categoria (
    Cat_Id INTEGER PRIMARY KEY,
    Cat_Nome VARCHAR(4000),
    Cat_Descricao VARCHAR(4000)
);

-- Create Baia table - correto
CREATE TABLE Baia (
    baia_cod INTEGER PRIMARY KEY,
    baia_qtde INTEGER
    
);

-- Create Armazenamento table - correto
CREATE TABLE Armazenamento (
    Arm_Id INTEGER PRIMARY KEY,
    Arm_Tipo VARCHAR(4000) NOT NULL,
    Arm_Quant INTEGER,
    Arm_estado CHAR
);

-- Create Produto table - correto
CREATE TABLE Produto (
    Prod_Id INTEGER PRIMARY KEY,
    Prod_Nome VARCHAR(4000) NOT NULL,
    Prod_Descricao VARCHAR(4000),
    Prod_Preco FLOAT
);

-- Create Serviço table - correto
CREATE TABLE Servico (
    serv_cod INTEGER PRIMARY KEY,
    serv_nome VARCHAR(4000) NOT NULL,
    serv_desc VARCHAR(4000)
);

-- Create Insumo table (has FK to Categoria) - correto
CREATE TABLE Insumo (
    insu_id INTEGER PRIMARY KEY,
    insu_nome VARCHAR(4000) NOT NULL,
    insu_categoria VARCHAR,
    insu_qtd_estoque INTEGER,
    Insu_Descricao VARCHAR(4000),
    Categoria_Cat_Id INTEGER,
    CONSTRAINT Insumo_Categoria_FK FOREIGN KEY (Categoria_Cat_Id) REFERENCES Categoria(Cat_Id)
);

-- Create Doador table (has FK to Pessoa) - correto
CREATE TABLE Doador (
    Usu_id INTEGER PRIMARY KEY,
    Doador_Matricula INTEGER UNIQUE,
    CONSTRAINT Doador_Pessoa_FK FOREIGN KEY (Usu_id) REFERENCES Pessoa(Pess_ID)
);

-- Create funcionario table (specialized from Pessoa) - correto
CREATE TABLE funcionario (
    Usu_id INTEGER PRIMARY KEY,
    Func_Login VARCHAR(4000) NOT NULL,
    Func_Senha VARCHAR(4000) NOT NULL,
    Func_Matricula INTEGER UNIQUE,
    CONSTRAINT funcionario_Usuario_FK FOREIGN KEY (Usu_id) REFERENCES Pessoa(Pess_id)
);

-- Create Compra table - correto
CREATE TABLE Compra (
    comp_id INTEGER PRIMARY KEY,
    comp_data DATE,
    comp_valorFinal FLOAT,
    
    Func_Matricula INTEGER,
    CONSTRAINT Compra_funcionario_FK FOREIGN KEY (Func_Matricula) REFERENCES funcionario(Func_Matricula)
);

-- Create Medica table (subtype of Baia) - correto
CREATE TABLE Medica (
    baia_cod INTEGER PRIMARY KEY,
    CONSTRAINT Medica_Baia_FK FOREIGN KEY (baia_cod) REFERENCES Baia(baia_cod)
);

-- Create definitiva table (subtype of Baia) - correto
CREATE TABLE definitiva (
    baia_cod INTEGER PRIMARY KEY,
    CONSTRAINT definitiva_Baia_FK FOREIGN KEY (baia_cod) REFERENCES Baia(baia_cod)
);

-- Create Doacao_Insumos table - correto
CREATE TABLE Doacao_Insumos (
    doa_id INTEGER PRIMARY KEY,
    doa_data DATE,
    Usuario_Usu_ID INTEGER,
    CONSTRAINT Doacao_Insumos_Usuario_FK FOREIGN KEY (Usuario_Usu_ID) REFERENCES Pessoa(Pess_ID)
);

-- Create adotante table (without FK to Adoção_Animal initially) - correto
CREATE TABLE adotante (
    Usu_id Integer PRIMARY KEY,
    Adotante_Matricula INTEGER UNIQUE,

    CONSTRAINT adotante_Usuario_FK FOREIGN KEY (Usu_id) REFERENCES Pessoa(Pess_ID)
);


-- Temporary table creation to resolve circular dependency - correto
CREATE TABLE Adocao_Animal_temp (
    adota_cod INTEGER PRIMARY KEY
);

-- Create Acolhimento table - correto
CREATE TABLE Acolhimento (
    aco_cod INTEGER PRIMARY KEY,
    aco_data DATE NOT NULL,
    funcionario_func_mat Integer,
    adotante_Ado_cod INTEGER,
    Animal_ani_cod INTEGER NOT NULL,
    
    CONSTRAINT Acolhimento_funcionario_FK FOREIGN KEY (funcionario_func_mat) REFERENCES funcionario(func_matricula),
    CONSTRAINT Acolhimento_adotante_FK FOREIGN KEY (adotante_Ado_cod) REFERENCES adotante(Adotante_Matricula)
);


-- Create Animal table - correto
CREATE TABLE Animal (
    ani_cod INTEGER PRIMARY KEY,
    ani_nome VARCHAR(4000) NOT NULL,
    ani_raca VARCHAR(4000) NOT NULL,
    ani_desc VARCHAR(4000) NOT NULL,
    ani_status CHAR(1) NOT NULL,
    ani_idade INTEGER,
    ani_statusVida CHAR(1),
    Acolhimento_aco_cod INTEGER,
    Baia_baia_cod INTEGER,
    CONSTRAINT Animal_Acolhimento_FK FOREIGN KEY (Acolhimento_aco_cod) REFERENCES Acolhimento(aco_cod),
    CONSTRAINT Animal_Baia_FK FOREIGN KEY (Baia_baia_cod) REFERENCES Baia(baia_cod)
);

-- Create Adocao_Animal table - correto
CREATE TABLE Adocao_Animal (
    adota_cod INTEGER PRIMARY KEY,
    funcionario_Func_Login VARCHAR(4000) NOT NULL,
    Animal_ani_cod INTEGER,
    adota_data DATE,
    Func_Matricula INTEGER,
    CONSTRAINT Adocao_Animal_Animal_FK FOREIGN KEY (Animal_ani_cod) REFERENCES Animal(ani_cod),
    CONSTRAINT Adocao_Animal_funcionario_FK FOREIGN KEY (Func_Matricula) REFERENCES funcionario(Func_Matricula)
);

-- Drop temporary table - correto
DROP TABLE Adocao_Animal_temp;

-- Add FK constraint to adotante table - correto
ALTER TABLE adotante
ADD COLUMN Adocao_Animal_adota_cod INTEGER,
ADD CONSTRAINT adotante_Adocao_Animal_FK FOREIGN KEY (Adocao_Animal_adota_cod) REFERENCES Adocao_Animal(adota_cod);



-- Create Transferir_Baia table - correto
CREATE TABLE Transferir_Baia (
    tb_cod INTEGER PRIMARY KEY,
    tb_date DATE,
    funcionario_Func_Login VARCHAR(4000) NOT NULL,
    Adocao_Animal_adota_cod INTEGER,
    Func_Matricula INTEGER,
    CONSTRAINT Transferir_Baia_funcionario_FK FOREIGN KEY (Func_Matricula) REFERENCES funcionario(Func_Matricula),
    CONSTRAINT Transferir_Baia_Adocao_Animal_FK FOREIGN KEY (Adocao_Animal_adota_cod) REFERENCES Adocao_Animal(adota_cod)
);

-- Create TransferirMedica table - correto
CREATE TABLE TransferirMedica (
    Transferir_Baia_tb_cod INTEGER,
    Medica_baia_cod INTEGER,
    PRIMARY KEY (Transferir_Baia_tb_cod, Medica_baia_cod),
    CONSTRAINT TransferirMedica_Transferir_Baia_FK FOREIGN KEY (Transferir_Baia_tb_cod) REFERENCES Transferir_Baia(tb_cod),
    CONSTRAINT TransferirMedica_Medica_FK FOREIGN KEY (Medica_baia_cod) REFERENCES Medica(baia_cod)
);

-- Create tranferirDefinitiva table - correto
CREATE TABLE tranferirDefinitiva (
    Transferir_Baia_tb_cod INTEGER,
    definitiva_baia_cod INTEGER,
    PRIMARY KEY (Transferir_Baia_tb_cod, definitiva_baia_cod),
    CONSTRAINT tranferirDefinitiva_Transferir_Baia_FK FOREIGN KEY (Transferir_Baia_tb_cod) REFERENCES Transferir_Baia(tb_cod),
    CONSTRAINT tranferirDefinitiva_definitiva_FK FOREIGN KEY (definitiva_baia_cod) REFERENCES definitiva(baia_cod)
);



-- Create executa table - correto
CREATE TABLE executa (
	exe_id integer primary key,
    funcionario_Usu_mat integer,
    Servico_serv_cod INTEGER,
    CONSTRAINT executa_funcionario_FK FOREIGN KEY (funcionario_Usu_mat) REFERENCES funcionario(func_matricula),
    CONSTRAINT executa_Servico_FK FOREIGN KEY (Servico_serv_cod) REFERENCES Servico(serv_cod)
);

-- Create Itens_Compras_Produto table - correto
CREATE TABLE Itens_Compras_Produto (
    Produto_Prod_Id INTEGER,
    Compra_comp_id INTEGER,
    Qtde INTEGER,
    ValorParcial FLOAT,
    PRIMARY KEY (Produto_Prod_Id, Compra_comp_id),
    CONSTRAINT Itens_Compras_Produto_Produto_FK FOREIGN KEY (Produto_Prod_Id) REFERENCES Produto(Prod_Id),
    CONSTRAINT Itens_Compras_Produto_Compra_FK FOREIGN KEY (Compra_comp_id) REFERENCES Compra(comp_id)
);

-- Create Itens_Compras_Insumo table - correto
CREATE TABLE Itens_Compras_Insumo (
    Compra_comp_id INTEGER,
    Insumo_insu_id INTEGER,
    qtde INTEGER,
    valorF FLOAT,
    PRIMARY KEY (Compra_comp_id, Insumo_insu_id),
    CONSTRAINT Itens_Compras_Insumo_Compra_FK FOREIGN KEY (Compra_comp_id) REFERENCES Compra(comp_id),
    CONSTRAINT Itens_Compras_Insumo_Insumo_FK FOREIGN KEY (Insumo_insu_id) REFERENCES Insumo(insu_id)
);

-- Create Itens_Movimentados_Doacao table - correto
CREATE TABLE Itens_Movimentados_Doacao (
    Doacao_Insumos_doa_id INTEGER,
    Insumo_insu_id INTEGER,
    quantidade INTEGER,
    data_validade DATE,
    PRIMARY KEY (Doacao_Insumos_doa_id, Insumo_insu_id),
    CONSTRAINT Itens_Movimentados_Doacao_Doacao_Insumos_FK FOREIGN KEY (Doacao_Insumos_doa_id) REFERENCES Doacao_Insumos(doa_id),
    CONSTRAINT Itens_Movimentados_Doacao_Insumo_FK FOREIGN KEY (Insumo_insu_id) REFERENCES Insumo(insu_id)
);

--correto
CREATE TABLE Itens_Movimentados (
    IM_ID INTEGER PRIMARY KEY,
    Armazenamento_Arm_Cod INTEGER,
    funcionario_Usu_mat integer,
    Data_Entrada DATE,
    Data_Saida DATE,
    Compra_comp_id INTEGER,
    Doacao_Insumos_doa_id INTEGER,
    CONSTRAINT Itens_Movimentados_Armazenamento_FK FOREIGN KEY (Armazenamento_Arm_Cod) REFERENCES Armazenamento(Arm_Id),
    CONSTRAINT Itens_Movimentados_funcionario_FK FOREIGN KEY (funcionario_Usu_mat) REFERENCES funcionario(func_matricula),
    CONSTRAINT Itens_Movimentados_Compra_FK FOREIGN KEY (Compra_comp_id) REFERENCES Compra(comp_id),
    CONSTRAINT Itens_Movimentados_Doacao_Insumos_FK FOREIGN KEY (Doacao_Insumos_doa_id) REFERENCES Doacao_Insumos(doa_id)
);


-- Create Animal_Insumo table -- correto
CREATE TABLE Animal_Insumo (
    AI_ID INTEGER PRIMARY KEY,
    Animal_ani_cod INTEGER,
    Insumo_insu_id INTEGER,
    AI_DataExecucao DATE,
    CONSTRAINT Animal_Insumo_Animal_FK FOREIGN KEY (Animal_ani_cod) REFERENCES Animal(ani_cod),
    CONSTRAINT Animal_Insumo_Insumo_FK FOREIGN KEY (Insumo_insu_id) REFERENCES Insumo(insu_id)
);


CREATE TABLE informacoes (
    emp_id INTEGER PRIMARY KEY,
    emp_nome VARCHAR(255),
    emp_nomeFantasia VARCHAR(300),
    emp_descricao TEXT,
    emp_endereco TEXT,
    emp_telefone VARCHAR(20),
    emp_capacidade integer,
    emp_cnpj VARCHAR(40) unique
);

-- empresa
CREATE SEQUENCE empresa_id_seq START 1;
ALTER TABLE informacoes ALTER COLUMN emp_id SET DEFAULT nextval(' empresa_id_seq');


-- Pessoa (você mencionou em outro contexto)
CREATE SEQUENCE pessoa_id_seq START 1;
ALTER TABLE Pessoa ALTER COLUMN Pess_ID SET DEFAULT nextval('pessoa_id_seq');

-- Categoria
CREATE SEQUENCE categoria_id_seq START 1;
ALTER TABLE Categoria ALTER COLUMN Cat_Id SET DEFAULT nextval('categoria_id_seq');

-- Baia
CREATE SEQUENCE baia_cod_seq START 1;
ALTER TABLE Baia ALTER COLUMN baia_cod SET DEFAULT nextval('baia_cod_seq');

-- Armazenamento
CREATE SEQUENCE armazenamento_id_seq START 1;
ALTER TABLE Armazenamento ALTER COLUMN Arm_Id SET DEFAULT nextval('armazenamento_id_seq');

-- Produto
CREATE SEQUENCE produto_id_seq START 1;
ALTER TABLE Produto ALTER COLUMN Prod_Id SET DEFAULT nextval('produto_id_seq');

-- Servico
CREATE SEQUENCE servico_cod_seq START 1;
ALTER TABLE Servico ALTER COLUMN serv_cod SET DEFAULT nextval('servico_cod_seq');

-- Insumo
CREATE SEQUENCE insumo_id_seq START 1;
ALTER TABLE Insumo ALTER COLUMN insu_id SET DEFAULT nextval('insumo_id_seq');

-- Doador
CREATE SEQUENCE doador_matricula_seq START 1;
ALTER TABLE Doador ALTER COLUMN doador_matricula SET DEFAULT nextval('doador_matricula_seq');

-- funcionario
CREATE SEQUENCE funcionario_matricula_seq START 1;
ALTER TABLE funcionario ALTER COLUMN func_matricula SET DEFAULT nextval('funcionario_matricula_seq');

-- Compra
CREATE SEQUENCE compra_id_seq START 1;
ALTER TABLE Compra ALTER COLUMN comp_id SET DEFAULT nextval('compra_id_seq');

-- Medica
-- (herda PK de Baia, já tem default via baia_cod_seq)

-- definitiva
-- (herda PK de Baia, já tem default via baia_cod_seq)

-- Doacao_Insumos
CREATE SEQUENCE doacao_insumos_id_seq START 1;
ALTER TABLE Doacao_Insumos ALTER COLUMN doa_id SET DEFAULT nextval('doacao_insumos_id_seq');

-- adotante
CREATE SEQUENCE adotante_matricula_seq START 1;
ALTER TABLE adotante ALTER COLUMN adotante_matricula SET DEFAULT nextval('adotante_matricula_seq');

-- Acolhimento
CREATE SEQUENCE acolhimento_id_seq START 1;
ALTER TABLE Acolhimento ALTER COLUMN aco_cod SET DEFAULT nextval('acolhimento_id_seq');

-- Animal
CREATE SEQUENCE animal_id_seq START 1;
ALTER TABLE Animal ALTER COLUMN ani_cod SET DEFAULT nextval('animal_id_seq');

-- Adocao_Animal
CREATE SEQUENCE adocao_animal_id_seq START 1;
ALTER TABLE Adocao_Animal ALTER COLUMN adota_cod SET DEFAULT nextval('adocao_animal_id_seq');

-- Transferir_Baia
CREATE SEQUENCE transferir_baia_id_seq START 1;
ALTER TABLE Transferir_Baia ALTER COLUMN tb_cod SET DEFAULT nextval('transferir_baia_id_seq');

-- executa
CREATE SEQUENCE executa_id_seq START 1;
ALTER TABLE executa ALTER COLUMN exe_id SET DEFAULT nextval('executa_id_seq');

-- Itens_Movimentados
CREATE SEQUENCE itens_movimentados_id_seq START 1;
ALTER TABLE Itens_Movimentados ALTER COLUMN IM_ID SET DEFAULT nextval('itens_movimentados_id_seq');

-- Animal_Insumo
CREATE SEQUENCE animal_insumo_id_seq START 1;
ALTER TABLE Animal_Insumo ALTER COLUMN AI_ID SET DEFAULT nextval('animal_insumo_id_seq');


ALTER TABLE pessoa
ADD CONSTRAINT unique_pess_cpf UNIQUE (pess_cpf);

ALTER TABLE pessoa
ADD CONSTRAINT unique_pess_email UNIQUE (pess_email);

ALTER TABLE animal
ALTER COLUMN acolhimento_aco_cod DROP NOT NULL;


ALTER TABLE Baia
ADD COLUMN baia_nome VARCHAR(100) NOT NULL,
ADD COLUMN baia_categoria VARCHAR(50) NOT NULL;

ALTER TABLE baia RENAME COLUMN baia_cod TO baia_id;





-- Renomear a coluna tb_cod para tb_id
ALTER TABLE Transferir_Baia RENAME COLUMN tb_cod TO tb_id;

-- Renomear Func_Matricula para func_mat
ALTER TABLE Transferir_Baia RENAME COLUMN Func_Matricula TO func_mat;

-- Remover coluna funcionario_Func_Login
ALTER TABLE Transferir_Baia DROP COLUMN funcionario_Func_Login;

-- Remover a coluna Adocao_Animal_adota_cod
ALTER TABLE Transferir_Baia DROP COLUMN Adocao_Animal_adota_cod;

-- Remover a constraint de chave estrangeira antiga (nome exato pode variar, ver abaixo)
ALTER TABLE Transferir_Baia DROP CONSTRAINT IF EXISTS Transferir_Baia_Adocao_Animal_FK;

-- Remover a constraint antiga que referenciava Func_Matricula (vamos recriar depois com o nome correto)
ALTER TABLE Transferir_Baia DROP CONSTRAINT IF EXISTS Transferir_Baia_funcionario_FK;

-- Adicionar novamente a constraint correta
ALTER TABLE Transferir_Baia ADD CONSTRAINT Transferir_Baia_funcionario_FK
FOREIGN KEY (func_mat) REFERENCES funcionario(Func_Matricula);


ALTER TABLE Transferir_Baia RENAME TO Transferencia;
DROP TABLE TransferirMedica;
DROP TABLE TransferirDefinitiva;



-- NOVAS TABELAS

-- Transfere_to_baia - ttb - associativa
CREATE TABLE Transferir_to_Baia (
    TTB_id INTEGER PRIMARY KEY NOT NULL,
    Transferir_Baia_tb_cod INTEGER,
    baia_cod INTEGER,
    CONSTRAINT Transferir_Baia_FK FOREIGN KEY (Transferir_Baia_tb_cod) REFERENCES Transferir_Baia(tb_cod),
    
);

CREATE SEQUENCE Transferir_to_Baia_id_seq START 1;
ALTER TABLE Transferir_to_Baia ALTER COLUMN TTB_id SET DEFAULT nextval('Transferir_to_Baia_id_seq');


--Restart

-- ALTER SEQUENCE nome_da_sequencia RESTART WITH novo_valor;

-- ALTER SEQUENCE baia_cod_seq RESTART WITH 1;

-- Renomear coluna

-- ALTER TABLE nome_da_tabela RENAME COLUMN nome_da_coluna TO novo_nome_da_coluna;

-- ALTER TABLE nome_da_tabela DROP COLUMN nome_da_coluna;
